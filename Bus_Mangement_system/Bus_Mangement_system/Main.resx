<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        91/29vZU////Bvb29hz29vYc9vb2OP///wv09PQt9PT0Lf///wv29vY49vb2HPb29hz///8H9vb2VPf3
        91/4+PgkAAAAAPf395j19fUzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD19fUz9/f3mAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA9/f3mPX19TMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPX1
        9TP39/eYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD39/eY9fX1MwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA9fX1M/b29qb29vZV9vb2Vfb29lX29vZV9vb2Vfb29lX29vZV9vb2Vfb29lX29vZV9vb2Vfb2
        9lX29vZV9vb2Vfb29lX29vZV9vb2Vfb29lX29vZV9vb2Vfb29qb19fUzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD19fUz9vb2qfX19Wb19fVm9fX1ZvX19Wb19fVm9fX1ZvX19Wb19fVm9fX1Zvb2
        9ov29vaL9fX1ZvX19Wb19fVm9fX1ZvX19Wb19fVm9fX1ZvX19Wb19fVm9vb2qfX19TMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPX19TP39/eYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA9vb2Hfb29h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD39/eY9fX1MwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wX19fW69vb2zPf393oAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD29vYc9vb2HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPf3
        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
        +V/7///f+///3/v//9/7///f+/5/3/v//9/n///n7///9+////fv///34///x/v//9/7///f+///3/gA
        AB/7///f+///3/wAAD//////////////////////
</value>
  </data>
</root>